// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(cuid())
  email            String         @unique
  name             String?
  agencyId         String?
  role             String         @default("user")
  createdAt        DateTime       @default(now())
  listings         Listing[]
  subscriptions    Subscription[]
  agency           Agency?        @relation(fields: [agencyId], references: [id])

  @@map("users")
}

model Agency {
  id           String       @id @default(cuid())
  name         String
  logoUrl      String?
  users        User[]
  listings     Listing[]
  createdAt    DateTime     @default(now())

  @@map("agencies")
}

model Listing {
  id               String          @id @default(cuid())
  userId           String
  agencyId         String?
  status           String          @default("draft")
  address          String
  suburb           String
  city             String
  postcode         String?
  propertyType     String
  bedrooms         Int
  bathrooms        Int
  parking          Int?
  floorAreaM2      Int?
  landAreaM2       Int?
  yearBuilt        Int?
  cv               Int?
  rv               Int?
  featuresJson     Json?
  notes            String?
  factsLockJson    Json?
  draftCopy        String?
  variantsJson     Json?
  schoolZonesJson  Json?           // Stores school zone information
  images           Image[]
  exports          ExportPackage[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  user             User            @relation(fields: [userId], references: [id])
  agency           Agency?         @relation(fields: [agencyId], references: [id])

  @@map("listings")
}

model Image {
  id        String   @id @default(cuid())
  listingId String
  url       String
  metaJson  Json?
  order     Int      @default(0)
  createdAt DateTime @default(now())
  listing   Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@map("images")
}


model ExportPackage {
  id          String   @id @default(cuid())
  listingId   String
  format      String
  payloadJson Json?
  fileUrl     String?
  createdAt   DateTime @default(now())
  listing     Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@map("export_packages")
}

model Subscription {
  id          String   @id @default(cuid())
  userId      String
  plan        String
  stripeSubId String?
  status      String   @default("inactive")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])

  @@map("subscriptions")
}